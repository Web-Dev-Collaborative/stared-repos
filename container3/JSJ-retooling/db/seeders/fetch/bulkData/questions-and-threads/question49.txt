{"body":"<p>I have two radio buttons and want to post the value of the selected one.\nHow can I get the value with jQuery?</p>\n\n<p>I can get all of them like this:</p>\n\n<pre><code>$(\"form :radio\")\n</code></pre>\n\n<p>How do I know which one is selected?</p>\n","title":"How can I know which radio button is selected via jQuery?","answers":[{"score":4025,"body":"<p>To get the value of the <strong>selected</strong> <code>radioName</code> item of a form with id <code>myForm</code>:</p>\n\n<pre><code>$('input[name=radioName]:checked', '#myForm').val()\n</code></pre>\n\n<p>Here's an example:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"false\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$('#myForm input').on('change', function() {\r\n   alert($('input[name=radioName]:checked', '#myForm').val()); \r\n});</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;form id=\"myForm\"&gt;\r\n  &lt;input type=\"radio\" name=\"radioName\" value=\"1\" /&gt; 1 &lt;br /&gt;\r\n  &lt;input type=\"radio\" name=\"radioName\" value=\"2\" /&gt; 2 &lt;br /&gt;\r\n  &lt;input type=\"radio\" name=\"radioName\" value=\"3\" /&gt; 3 &lt;br /&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":81,"body":"<p>You can use the :checked selector along with the radio selector.</p>\n\n<pre><code> $(\"form:radio:checked\").val();\n</code></pre>\n"},{"score":422,"body":"<p>Use this..  </p>\n\n<pre><code>$(\"#myform input[type='radio']:checked\").val();\n</code></pre>\n"},{"score":17,"body":"<p>In a <strong>JSF</strong> generated radio button (using <code>&lt;h:selectOneRadio&gt;</code> tag), you can do this:</p>\n\n<pre><code>radiobuttonvalue = jQuery(\"input[name='form_id\\:radiobutton_id']:checked\").val();\n</code></pre>\n\n<p>where selectOneRadio ID is <strong>radiobutton_id</strong> and form ID is <strong>form_id</strong>.</p>\n\n<p>Be sure to use <strong>name</strong> instead <strong>id</strong>, as indicated, because jQuery uses this attribute (<strong>name</strong> is generated automatically by JSF resembling control ID).</p>\n"},{"score":31,"body":"<pre><code>$(\"input:radio:checked\").val();\n</code></pre>\n"},{"score":314,"body":"<p>If you already have a reference to a radio button group, for example:</p>\n\n<pre><code>var myRadio = $(\"input[name=myRadio]\");\n</code></pre>\n\n<p>Use the <code>filter()</code> function, not <code>find()</code>. (<code>find()</code> is for locating child/descendant elements, whereas <code>filter()</code> searches top-level elements in your selection.)</p>\n\n<pre><code>var checkedValue = myRadio.filter(\":checked\").val();\n</code></pre>\n\n<hr>\n\n<p><em>Notes:</em> This answer was originally correcting another answer that recommended using <code>find()</code>, which seems to have since been changed. <code>find()</code> could still be useful for the situation where you already had a reference to a container element, but not to the radio buttons, e.g.:</p>\n\n<pre><code>var form = $(\"#mainForm\");\n...\nvar checkedValue = form.find(\"input[name=myRadio]:checked\").val();\n</code></pre>\n"},{"score":143,"body":"<p>This should work: </p>\n\n<pre><code>$(\"input[name='radioName']:checked\").val()\n</code></pre>\n\n<p>Note the \"\" usaged around the input:checked and not '' like the Peter J's solution</p>\n"},{"score":54,"body":"<p>Get all radios:</p>\n\n<pre><code>var radios = jQuery(\"input[type='radio']\");\n</code></pre>\n\n<p>Filter to get the one thats checked</p>\n\n<pre><code>radios.filter(\":checked\")\n</code></pre>\n"},{"score":51,"body":"<p>Another option is:</p>\n\n<pre><code>$('input[name=radioName]:checked').val()\n</code></pre>\n"},{"score":16,"body":"<p>Also, check if the user does not select anything.</p>\n\n<pre><code>var radioanswer = 'none';\nif ($('input[name=myRadio]:checked').val() != null) {           \n   radioanswer = $('input[name=myRadio]:checked').val();\n}\n</code></pre>\n"},{"score":15,"body":"<p>If you have Multiple radio buttons in single form then </p>\n\n<pre><code>var myRadio1 = $('input[name=radioButtonName1]');\nvar value1 = myRadio1.filter(':checked').val();\n\nvar myRadio2 = $('input[name=radioButtonName2]');\nvar value2 = myRadio2.filter(':checked').val();\n</code></pre>\n\n<p>This is working for me.</p>\n"},{"score":13,"body":"<pre><code> $(\".Stat\").click(function () {\n     var rdbVal1 = $(\"input[name$=S]:checked\").val();\n }\n</code></pre>\n"},{"score":25,"body":"<p>In my case I have two radio buttons in one form and I wanted to know the status of each button.\nThis below worked for me:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>// get radio buttons value\r\nconsole.log( \"radio1: \" +  $('input[id=radio1]:checked', '#toggle-form').val() );\r\nconsole.log( \"radio2: \" +  $('input[id=radio2]:checked', '#toggle-form').val() );\r\n\r\n\r\n    </code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;form id=\"toggle-form\"&gt;\r\n  &lt;div id=\"radio\"&gt;\r\n    &lt;input type=\"radio\" id=\"radio1\" name=\"radio\" checked=\"checked\" /&gt;&lt;label for=\"radio1\"&gt;Plot single&lt;/label&gt;\r\n    &lt;input type=\"radio\" id=\"radio2\" name=\"radio\"/&gt;&lt;label for=\"radio2\"&gt;Plot all&lt;/label&gt;\r\n  &lt;/div&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":25,"body":"<p>Here's how I would write the form and handle the getting of the checked radio.</p>\n\n<p>Using a form called myForm:</p>\n\n<pre><code>&lt;form id='myForm'&gt;\n    &lt;input type='radio' name='radio1' class='radio1' value='val1' /&gt;\n    &lt;input type='radio' name='radio1' class='radio1' value='val2' /&gt;\n    ...\n&lt;/form&gt;\n</code></pre>\n\n<p>Get the value from the form:</p>\n\n<pre><code>$('#myForm .radio1:checked').val();\n</code></pre>\n\n<p>If you're not posting the form, I would simplify it further by using:</p>\n\n<pre><code>&lt;input type='radio' class='radio1' value='val1' /&gt;\n&lt;input type='radio' class='radio1' value='val2' /&gt;\n</code></pre>\n\n<p>Then getting the checked value becomes:</p>\n\n<pre><code>    $('.radio1:checked').val();\n</code></pre>\n\n<p>Having a class name on the input allows me to easily style the inputs...</p>\n"},{"score":11,"body":"<p>To get the value of the selected radio that uses a class:</p>\n\n<pre><code>$('.class:checked').val()\n</code></pre>\n"},{"score":15,"body":"<p>I wrote a jQuery plugin for setting and getting radio-button values. It also respects the \"change\" event on them.</p>\n\n<pre><code>(function ($) {\n\n    function changeRadioButton(element, value) {\n        var name = $(element).attr(\"name\");\n        $(\"[type=radio][name=\" + name + \"]:checked\").removeAttr(\"checked\");\n        $(\"[type=radio][name=\" + name + \"][value=\" + value + \"]\").attr(\"checked\", \"checked\");\n        $(\"[type=radio][name=\" + name + \"]:checked\").change();\n    }\n\n    function getRadioButton(element) {\n        var name = $(element).attr(\"name\");\n        return $(\"[type=radio][name=\" + name + \"]:checked\").attr(\"value\");\n    }\n\n    var originalVal = $.fn.val;\n    $.fn.val = function(value) {\n\n        //is it a radio button? treat it differently.\n        if($(this).is(\"[type=radio]\")) {\n\n            if (typeof value != 'undefined') {\n\n                //setter\n                changeRadioButton(this, value);\n                return $(this);\n\n            } else {\n\n                //getter\n                return getRadioButton(this);\n\n            }\n\n        } else {\n\n            //it wasn't a radio button - let's call the default val function.\n            if (typeof value != 'undefined') {\n                return originalVal.call(this, value);\n            } else {\n                return originalVal.call(this);\n            }\n\n        }\n    };\n})(jQuery);\n</code></pre>\n\n<p>Put the code anywhere to enable the addin. Then enjoy! It just overrides the default val function without breaking anything.</p>\n\n<p>You can visit this jsFiddle to try it in action, and see how it works.</p>\n\n<p><a href=\"http://jsfiddle.net/ffMathy/MN856/\">Fiddle</a></p>\n"},{"score":10,"body":"<p>Use this:</p>\n\n<pre><code>value = $('input[name=button-name]:checked').val();\n</code></pre>\n"},{"score":6,"body":"<p>If you only have 1 set of radio buttons on 1 form, the jQuery code is as simple as this:</p>\n\n<pre><code>$( \"input:checked\" ).val()\n</code></pre>\n"},{"score":61,"body":"<p>If you want just the boolean value, i.e. if it's checked or not try this:</p>\n\n<pre><code>$(\"#Myradio\").is(\":checked\")\n</code></pre>\n"},{"score":4,"body":"<p>To retrieve all radio buttons values in JavaScript array use following jQuery code :</p>\n\n<pre><code>var values = jQuery('input:checkbox:checked.group1').map(function () {\n    return this.value;\n}).get();\n</code></pre>\n"},{"score":5,"body":"<p>I've released a library to help with this.  Pulls all possible input values, actually, but also includes which radio button was checked.  You can check it out at <a href=\"https://github.com/mazondo/formalizedata\" rel=\"nofollow\">https://github.com/mazondo/formalizedata</a></p>\n\n<p>It'll give you a js object of the answers, so a form like:</p>\n\n<pre><code>&lt;form&gt;\n&lt;input type=\"radio\" name\"favorite-color\" value=\"blue\" checked&gt; Blue\n&lt;input type=\"radio\" name=\"favorite-color\" value=\"red\"&gt; Red\n&lt;/form&gt;\n</code></pre>\n\n<p>will give you:</p>\n\n<pre><code>$(\"form\").formalizeData()\n{\n  \"favorite-color\" : \"blue\"\n}\n</code></pre>\n"},{"score":10,"body":"<p>I use this simple script</p>\n\n<pre><code>$('input[name=\"myRadio\"]').on('change', function() {\n  var radioValue = $('input[name=\"myRadio\"]:checked').val();        \n  alert(radioValue); \n});\n</code></pre>\n"},{"score":12,"body":"<p>This works fine</p>\n\n<pre><code>$('input[type=\"radio\"][class=\"className\"]:checked').val()\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/as4bnkmm/1/\" rel=\"noreferrer\"><strong>Working Demo</strong></a></p>\n\n<p>The <code>:checked</code> selector works for <code>checkboxes</code>, <code>radio buttons</code>, and select elements. For select elements only, use the <code>:selected</code> selector.</p>\n\n<p><a href=\"http://api.jquery.com/checked-selector/\" rel=\"noreferrer\"><strong>API for <code>:checked Selector</code></strong></a></p>\n"},{"score":1,"body":"<p>From <a href=\"https://stackoverflow.com/q/34815656/1541563\">this question</a>, I came up with an alternate way to access the currently selected <code>input</code> when you're within a <code>click</code> event for its respective label. The reason why is because the newly selected <code>input</code> isn't updated until after its <code>label</code>'s click event.</p>\n\n<p><strong>TL;DR</strong></p>\n\n<pre><code>$('label').click(function() {\n  var selected = $('#' + $(this).attr('for')).val();\n\n  ...\n});\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"false\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(function() {\r\n  // this outright does not work properly as explained above\r\n  $('#reported label').click(function() {\r\n    var query = $('input[name=\"filter\"]:checked').val();\r\n    var time = (new Date()).toString();\r\n\r\n    $('.query[data-method=\"click event\"]').html(query + ' at ' + time);\r\n  });\r\n\r\n  // this works, but fails to update when same label is clicked consecutively\r\n  $('#reported input[name=\"filter\"]').on('change', function() {\r\n    var query = $('input[name=\"filter\"]:checked').val();\r\n    var time = (new Date()).toString();\r\n\r\n    $('.query[data-method=\"change event\"]').html(query + ' at ' + time);\r\n  });\r\n\r\n  // here is the solution I came up with\r\n  $('#reported label').click(function() {\r\n    var query = $('#' + $(this).attr('for')).val();\r\n    var time = (new Date()).toString();\r\n\r\n    $('.query[data-method=\"click event with this\"]').html(query + ' at ' + time);\r\n  });\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>input[name=\"filter\"] {\r\n  display: none;\r\n}\r\n#reported label {\r\n  background-color: #ccc;\r\n  padding: 5px;\r\n  margin: 5px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.query {\r\n  padding: 5px;\r\n  margin: 5px;\r\n}\r\n.query:before {\r\n  content: \"on \" attr(data-method)\": \";\r\n}\r\n[data-method=\"click event\"] {\r\n  color: red;\r\n}\r\n[data-method=\"change event\"] {\r\n  color: #cc0;\r\n}\r\n[data-method=\"click event with this\"] {\r\n  color: green;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;form id=\"reported\"&gt;\r\n  &lt;input type=\"radio\" name=\"filter\" id=\"question\" value=\"questions\" checked=\"checked\"&gt;\r\n  &lt;label for=\"question\"&gt;Questions&lt;/label&gt;\r\n\r\n  &lt;input type=\"radio\" name=\"filter\" id=\"answer\" value=\"answers\"&gt;\r\n  &lt;label for=\"answer\"&gt;Answers&lt;/label&gt;\r\n\r\n  &lt;input type=\"radio\" name=\"filter\" id=\"comment\" value=\"comments\"&gt;\r\n  &lt;label for=\"comment\"&gt;Comments&lt;/label&gt;\r\n\r\n  &lt;input type=\"radio\" name=\"filter\" id=\"user\" value=\"users\"&gt;\r\n  &lt;label for=\"user\"&gt;Users&lt;/label&gt;\r\n\r\n  &lt;input type=\"radio\" name=\"filter\" id=\"company\" value=\"companies\"&gt;\r\n  &lt;label for=\"company\"&gt;Companies&lt;/label&gt;\r\n\r\n  &lt;div class=\"query\" data-method=\"click event\"&gt;&lt;/div&gt;\r\n  &lt;div class=\"query\" data-method=\"change event\"&gt;&lt;/div&gt;\r\n  &lt;div class=\"query\" data-method=\"click event with this\"&gt;&lt;/div&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":2,"body":"<pre><code>$(function () {\n// Someone has clicked one of the radio buttons\nvar myform= 'form.myform';\n$(myform).click(function () {\n    var radValue= \"\";\n    $(this).find('input[type=radio]:checked').each(function () {\n        radValue= $(this).val();\n    });\n  })\n});\n</code></pre>\n"},{"score":4,"body":"<p>try it-</p>\n\n<pre><code>var radioVal = $(\"#myform\").find(\"input[type='radio']:checked\").val();\n\nconsole.log(radioVal);\n</code></pre>\n"},{"score":8,"body":"<p><strong>DEMO</strong> : <a href=\"https://jsfiddle.net/ipsjolly/xygr065w/\" rel=\"noreferrer\">https://jsfiddle.net/ipsjolly/xygr065w/</a></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>\t$(function(){\r\n\t    $(\"#submit\").click(function(){      \r\n\t        alert($('input:radio:checked').val());\r\n\t    });\r\n\t });</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;table&gt;\r\n       &lt;tr&gt;\r\n         &lt;td&gt;Sales Promotion&lt;/td&gt;\r\n         &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"1\"&gt;1&lt;/td&gt;\r\n         &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"2\"&gt;2&lt;/td&gt;\r\n         &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"3\"&gt;3&lt;/td&gt;\r\n         &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"4\"&gt;4&lt;/td&gt;\r\n         &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"5\"&gt;5&lt;/td&gt;\r\n      &lt;/tr&gt;\r\n    &lt;/table&gt;\r\n&lt;button id=\"submit\"&gt;submit&lt;/button&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":1,"body":"<p>What I needed to do was simplify C# code, that is do as much as possible in the front end JavaScript.  I'm using a fieldset container because I'm working in DNN and it has its own form.  So I can't add a form.</p>\n\n<p>I need to test which text box out of 3 is being used and if it is, what's the type of search? Starts with the value, Contains the value, Exact Match of the value.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;fieldset id=\"fsPartNum\" class=\"form-inline\"&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;label for=\"txtPartNumber\"&gt;Part Number:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"txtPartNumber\" class=\"input-margin-pn\" /&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;label for=\"radPNStartsWith\"&gt;Starts With: &lt;/label&gt;\n    &lt;input type=\"radio\" id=\"radPNStartsWith\" name=\"partNumber\" checked  value=\"StartsWith\"/&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;label for=\"radPNContains\"&gt;Contains: &lt;/label&gt;\n    &lt;input type=\"radio\" id=\"radPNContains\" name=\"partNumber\" value=\"Contains\" /&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;label for=\"radPNExactMatch\"&gt;Exact Match: &lt;/label&gt;\n    &lt;input type=\"radio\" id=\"radPNExactMatch\" name=\"partNumber\" value=\"ExactMatch\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p></p>\n\n<p>And my JavaScript is:</p>\n\n<pre><code>        alert($('input[name=partNumber]:checked', '#fsPartNum').val()); \n    if(txtPartNumber.val() !== ''){\n        message = 'Customer Part Number';\n    }\n    else if(txtCommercialPartNumber.val() !== ''){\n\n    }\n    else if(txtDescription.val() !== ''){\n\n    }\n</code></pre>\n\n<p>Just saying any containing tag with an ID can be used.  For DNNers, this is good to know.  The end goal here is pass to the mid-level code what is needed to start a parts search in SQL Server.</p>\n\n<p>This way I don't have to copy the much more complicated previous C# code also.  The heavy lifting is being done right here.</p>\n\n<p>I had to look a bit for this and then tinker with it to get it to work.  So for other DNNers, hopefully this is easy to find.</p>\n"},{"score":3,"body":"<p>Another way to get it:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code> $(\"#myForm input[type=radio]\").on(\"change\",function(){\r\n   if(this.checked) {\r\n    alert(this.value);\r\n    }\r\n  });</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;form id=\"myForm\"&gt;\r\n   &lt;span&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"1\"&gt;1&lt;/span&gt;&lt;br&gt;\r\n   &lt;span&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"2\"&gt;2&lt;/span&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":-1,"body":"<p>You can call Function <strong>onChange()</strong></p>\n\n<pre><code>  &lt;input type=\"radio\" name=\"radioName\" value=\"1\" onchange=\"radio_changed($(this).val())\" /&gt; 1 &lt;br /&gt;\n  &lt;input type=\"radio\" name=\"radioName\" value=\"2\" onchange=\"radio_changed($(this).val())\"  /&gt; 2 &lt;br /&gt;\n  &lt;input type=\"radio\" name=\"radioName\" value=\"3\"  onchange=\"radio_changed($(this).val())\" /&gt; 3 &lt;br /&gt;\n\n&lt;script&gt;\nfunction radio_changed(val){\n    alert(val);\n}\n&lt;/script&gt;\n</code></pre>\n"},{"score":1,"body":"<p>You need access with the <code>:checked</code> selector:</p>\n\n<h3>Check this doc:</h3>\n\n<blockquote>\n  <ul>\n  <li><a href=\"https://api.jquery.com/checked-selector/\" rel=\"nofollow noreferrer\">https://api.jquery.com/checked-selector/</a></li>\n  </ul>\n</blockquote>\n\n<p>a example:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$('input[name=radioName]:checked', '#myForm').val()\r\n$('#myForm input').on('change', function() {\r\n\t$('#val').text($('input[name=radioName]:checked', '#myForm').val());\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#val {\r\n  color: #EB0054;\r\n  font-size: 1.5em;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;h3&gt;Radio value: &lt;span id='val'&gt;&lt;span&gt;&lt;/h3&gt;\r\n&lt;form id=\"myForm\"&gt;\r\n  &lt;input type=\"radio\" name=\"radioName\" value=\"a\"&gt; a &lt;br&gt;\r\n  &lt;input type=\"radio\" name=\"radioName\" value=\"b\"&gt; b &lt;br&gt;\r\n  &lt;input type=\"radio\" name=\"radioName\" value=\"c\"&gt; c &lt;br&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":5,"body":"<p>JQuery to get all the radio buttons in the form and the checked value.</p>\n\n<pre><code>$.each($(\"input[type='radio']\").filter(\":checked\"), function () {\n  console.log(\"Name:\" + this.name);\n  console.log(\"Value:\" + $(this).val());\n});\n</code></pre>\n"},{"score":1,"body":"<p>How about this?</p>\n\n<p>Using <strong>change</strong> and get the value of radio type is checked...</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$('#my-radio-form').on('change', function() {\r\n  console.log($('[type=\"radio\"]:checked').val());\r\n});</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;form id=\"my-radio-form\"&gt;\r\n  &lt;input type=\"radio\" name=\"input-radio\" value=\"a\" /&gt;a\r\n  &lt;input type=\"radio\" name=\"input-radio\" value=\"b\" /&gt;b\r\n  &lt;input type=\"radio\" name=\"input-radio\" value=\"c\" /&gt;c\r\n  &lt;input type=\"radio\" name=\"input-radio\" value=\"d\" /&gt;d\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":1,"body":"<p>**Please try below example to check which radio button in selected ** </p>\n\n<pre><code>&lt;script&gt;\n    $('#form1 input').on('change', function() {\n       alert($('input[name=age]:checked', '#form1 ').val()); \n    });\n&lt;/script&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;\n    &lt;form id=\"form1\"&gt;\n      &lt;input type=\"radio\" name=\"age\" value=\"18\" /&gt; 18 &lt;br /&gt;\n      &lt;input type=\"radio\" name=\"age\" value=\"20\" /&gt; 20 &lt;br /&gt;\n      &lt;input type=\"radio\" name=\"age\" value=\"22\" /&gt; 22 &lt;br /&gt;\n    &lt;/form&gt;\n</code></pre>\n"},{"score":0,"body":"<p><strong>jQuery plugin for setting and getting radio-button values. It also respects the \"change\" event on them.</strong></p>\n\n<pre><code> &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;form id=\"toggle-form\"&gt;\n      &lt;div id=\"radio\"&gt;\n        &lt;input type=\"radio\" id=\"radio1\" name=\"radio\" checked=\"checked\" /&gt;&lt;label for=\"radio1\"&gt;Plot single&lt;/label&gt;\n        &lt;input type=\"radio\" id=\"radio2\" name=\"radio\"/&gt;&lt;label for=\"radio2\"&gt;Plot all&lt;/label&gt;\n      &lt;/div&gt;\n    &lt;/form&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    $( document ).ready(function() {\n     //Get all radios:\n     var radios = jQuery(\"input[type='radio']\");\n     checked_radios=radios.filter(\":checked\");\nfor(i=0;i&lt;checked_radios.length;i++)\n{\n   console.log(checked_radios[i]);\n}\n\n    });\n    &lt;/script&gt;\n</code></pre>\n\n<p><strong>or another way</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$( document ).ready(function() {\n  //Get all radios:\n  checked_radios=jQuery('input[name=radio]:checked').val(); \nfor(i=0;i&lt;checked_radios.length;i++)\n{\n   console.log(checked_radios[i]);\n}\n\n});\n&lt;/script&gt;\n</code></pre>\n"},{"score":1,"body":"<p>Try</p>\n\n<pre><code>myForm.myOption.value\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function check() {\r\n  console.log( myForm.myOption.value );\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;form id=\"myForm\"&gt;\r\n  &lt;input type=\"radio\" name=\"myOption\" value=\"1\"&gt; 1 &lt;br&gt;\r\n  &lt;input type=\"radio\" name=\"myOption\" value=\"2\"&gt; 2 &lt;br&gt;\r\n  &lt;input type=\"radio\" name=\"myOption\" value=\"3\"&gt; 3 &lt;br&gt;\r\n&lt;/form&gt;\r\n&lt;button onclick=\"check()\"&gt;check&lt;/button&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":0,"body":"<p>Along with the CSS selector <code>:checked</code>, you can also use the <a href=\"https://api.jquery.com/prop/\" rel=\"nofollow noreferrer\">prop function</a> (as of jQuery 1.6). I can't remember what project I was working on where simply using <code>$('#something').is(':checked')</code> only worked sometimes, and I resorted to also using <code>$('#something').prop('checked')</code> worked when it failed, but it led me to using both.</p>\n\n<p>In my code snippet below, I've written two helper functions, <code>is_checked</code> and <code>get_group_value</code>. The function <code>is_checked</code> returns a boolean true/false value; true if the input passed in the parameter is checked (also checks with the <code>prop()</code> function) or false if it's not checked. The function <code>get_group_value</code> takes the <code>name</code> of the radio inputs and returns the value of the one that is checked, or an empty string if none are checked. These helper functions will also work with checkboxes, not just radio buttons.</p>\n\n<p>Since the question did not define <em>when</em> they're retrieving the value(s), I've written a few listeners for four (3) different scenarios: when interacting with any radio button, when submitting the form, and when clicking one of these hard-coded buttons to do a one-time retrieval of the value of the group.</p>\n\n<p>Please note that I'm using \"click\" to identify when the user interacts with the radio input element because \"change\" will never get triggered since the \"value\" attribute doesn't get changed when it's checked or not. I use this for checkboxes as well as radio buttons.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function is_checked(input) {\r\n  var $input = $(input);\r\n  return $input.is(':checked') || $input.prop('checked'); //Returns a boolean value. True if checked, false if not.\r\n}\r\nfunction get_group_value(group_name) {\r\n  var $inputs = $('[name=\"' + group_name + '\"]:checked');\r\n  if ($inputs.length) { return $inputs.first().val(); } //If it exists, return the value of the first one found\r\n  return ''; //If it doesn't exist, return nothing\r\n}\r\n$('form').on('submit', function(e) {\r\n  e.preventDefault();\r\n  var $form = $(this), results = {};\r\n  $form.find('input[type=radio]').each(function() {\r\n    var $input = $(this);\r\n    if (is_checked(this)) {\r\n      results[$input.attr('name')] = $input.val();\r\n    }\r\n  });\r\n  console.info('Form Results', results);\r\n});\r\n$('form input[type=radio]').on('click', function(e) {\r\n  var group_name = $(this).attr('name');\r\n  console.info('Radio Button Click', group_name, get_group_value(group_name));\r\n});\r\n$('button.radio-button').on('click', function(e) {\r\n  var group_name = $(this).attr('id');\r\n  console.info('Button Click', group_name, get_group_value(group_name));\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.my-test {\r\n  background: #ffffff;\r\n  color: #000000;\r\n  padding: 16px;\r\n}\r\n\r\nform {\r\n  padding: 8px;\r\n  border: 1px solid #999999;\r\n}\r\n\r\nfieldset {\r\n  border: none;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div class=\"my-test\"&gt;\r\n  &lt;form&gt;\r\n    Group 1\r\n    &lt;fieldset&gt;\r\n      &lt;label&gt;&lt;input type=\"radio\" name=\"example-1\" value=\"Foo\" required /&gt;Foo&lt;/label&gt;\r\n      &lt;label&gt;&lt;input type=\"radio\" name=\"example-1\" value=\"Bar\" required /&gt;Bar&lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    Group 2\r\n    &lt;fieldset&gt;\r\n      &lt;label&gt;&lt;input type=\"radio\" name=\"example-2\" value=\"Banana\" required /&gt;Banana&lt;/label&gt;\r\n      &lt;label&gt;&lt;input type=\"radio\" name=\"example-2\" value=\"Apple\" required /&gt;Apple&lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\r\n  &lt;/form&gt;\r\n  &lt;p&gt;Press this button to just get the value of the first group: &lt;button class=\"radio-button\" id=\"example-1\"&gt;Foo or Bar?&lt;/button&gt;&lt;/p&gt;\r\n  &lt;p&gt;Press this button to just get the value of the second group: &lt;button class=\"radio-button\" id=\"example-2\"&gt;Banana or Apple?&lt;/button&gt;&lt;/p&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":0,"body":"<p>try this one.\nit worked for me\n$('input[type=&quot;radio&quot;][name=&quot;name&quot;]:checked').val();</p>\n"}],"score":2788}