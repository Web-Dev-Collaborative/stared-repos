{"body":"<p>I am using jQuery. How do I get the path of the current URL and assign it to a variable?</p>\n\n<p>Example URL:</p>\n\n<pre><code>http://localhost/menuname.de?foo=bar&amp;amp;number=0\n</code></pre>\n","title":"Get current URL with jQuery?","answers":[{"score":54,"body":"<p>You'll want to use JavaScript's built-in <a href=\"http://www.devguru.com/Technologies/ecmascript/quickref/location.html\" rel=\"noreferrer\"><code>window.location</code></a> object.</p>\n"},{"score":2605,"body":"<p>To get the path, you can use:</p>\n\n<pre><code>var pathname = window.location.pathname; // Returns path only (/path/example.html)\nvar url      = window.location.href;     // Returns full URL (https://example.com/path/example.html)\nvar origin   = window.location.origin;   // Returns base URL (https://example.com)\n</code></pre>\n"},{"score":73,"body":"<p>If you need the hash parameters present in the URL, <code>window.location.href</code> may be a better choice.</p>\n\n<pre><code>window.location.pathname\n=&gt; /search\n\nwindow.location.href \n =&gt; www.website.com/search#race_type=1\n</code></pre>\n"},{"score":46,"body":"<p>Just add this function in JavaScript, and it will return the absolute path of the current path.</p>\n\n<pre><code>function getAbsolutePath() {\n    var loc = window.location;\n    var pathName = loc.pathname.substring(0, loc.pathname.lastIndexOf('/') + 1);\n    return loc.href.substring(0, loc.href.length - ((loc.pathname + loc.search + loc.hash).length - pathName.length));\n}\n</code></pre>\n\n<p>I hope it works for you.</p>\n"},{"score":822,"body":"<p>In pure jQuery style:</p>\n\n<pre><code>$(location).attr('href');\n</code></pre>\n\n<p>The location object also has other properties, like host, hash, protocol, and pathname.</p>\n"},{"score":29,"body":"<p>For the host name only, use:</p>\n\n<pre><code>window.location.hostname\n</code></pre>\n"},{"score":31,"body":"<p>This is a more complicated issue than many may think.  Several browsers support built-in JavaScript location objects and associated parameters/methods accessible through <code>window.location</code> or <code>document.location</code>. However, different flavors of Internet Explorer (6,7) don't support these methods in the same way, (<code>window.location.href</code>?  <code>window.location.replace()</code> not supported) so you have to access them differently by writing conditional code all the time to hand-hold Internet Explorer.</p>\n\n<p>So, if you have jQuery available and loaded, you might as well use jQuery (location), as the others mentioned because it resolves these issues. If however, you are doing-for an example-some client-side geolocation redirection via JavaScript (that is, using Google Maps API and location object methods), then you may not want to load the entire jQuery library and write your conditional code that checks every version of Internet Explorer/Firefox/etc.</p>\n\n<p>Internet Explorer makes the front-end coding cat unhappy, but jQuery is a plate of milk.</p>\n"},{"score":9,"body":"<p><strong><em>window.location</em></strong> will give you the current <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\" rel=\"noreferrer\">URL</a>, and you can extract whatever you want from it...</p>\n"},{"score":9,"body":"<p>If you want to get the path of the root site, use this:</p>\n\n<pre><code>$(location).attr('href').replace($(location).attr('pathname'),'');\n</code></pre>\n"},{"score":24,"body":"<p>This will also work:</p>\n\n<pre><code>var currentURL = window.location.href;\n</code></pre>\n"},{"score":13,"body":"<p>I have this to strip out the GET variables.</p>\n\n<pre><code>var loc = window.location;\nvar currentURL = loc.protocol + '//' + loc.host + loc.pathname;\n</code></pre>\n"},{"score":9,"body":"<p><code>var path = location.pathname</code> returns the path of the current URL (jQuery is not needed). The use of <code>window.location</code> is optional.</p>\n"},{"score":12,"body":"<pre><code> var currenturl = jQuery(location).attr('href');\n</code></pre>\n"},{"score":20,"body":"<p>You can log window.location and see all the options, for just the URL use:</p>\n\n<pre><code>window.location.origin\n</code></pre>\n\n<p>for the whole path use:</p>\n\n<pre><code>window.location.href\n</code></pre>\n\n<p>there's also location.<em>_</em>_</p>\n\n<pre><code>.host\n.hostname\n.protocol\n.pathname\n</code></pre>\n"},{"score":486,"body":"<pre><code>http://www.refulz.com:8082/index.php#tab2?foo=789\n\nProperty    Result\n------------------------------------------\nhost        www.refulz.com:8082\nhostname    www.refulz.com\nport        8082\nprotocol    http:\npathname    index.php\nhref        http://www.refulz.com:8082/index.php#tab2\nhash        #tab2\nsearch      ?foo=789\n\nvar x = $(location).attr('&lt;property&gt;');\n</code></pre>\n\n<p><strong>This will work only if you have jQuery. For example:</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  $(location).attr('href');      // http://www.refulz.com:8082/index.php#tab2\n  $(location).attr('pathname');  // index.php\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n"},{"score":11,"body":"<p>The following are examples of useful code snippets that can be used – some of the examples use standard JavaScript functions and are not specific to jQuery:</p>\n\n<p>See <em><a href=\"http://www.designchemical.com/blog/index.php/jquery/8-useful-jquery-snippets-for-urls-querystrings/\" rel=\"noreferrer\">8 Useful jQuery Snippets For URL’s &amp; Querystrings</a></em>.</p>\n"},{"score":16,"body":"<p>This will return the absolute <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\" rel=\"noreferrer\">URL</a> of the current page using JavaScript/<a href=\"http://en.wikipedia.org/wiki/JQuery\" rel=\"noreferrer\">jQuery</a>. </p>\n\n<ul>\n<li><p><code>document.URL</code></p></li>\n<li><p><code>$(\"*\").context.baseURI</code></p></li>\n<li><p><code>location.href</code></p></li>\n</ul>\n"},{"score":13,"body":"<p>If there is someone who wants to concatenate the <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\" rel=\"noreferrer\">URL</a> and hash tag, combine two functions:</p>\n\n<pre><code>var pathname = window.location.pathname + document.location.hash;\n</code></pre>\n"},{"score":11,"body":"<p>To get the URL of the parent window from within an iframe:</p>\n\n<pre><code>$(window.parent.location).attr('href');\n</code></pre>\n\n<p>NB: only works on same domain</p>\n"},{"score":11,"body":"<p>Here is an example to get the current URL using jQuery and JavaScript:</p>\n\n<pre><code>$(document).ready(function() {\n\n    //jQuery\n    $(location).attr('href');\n\n    //Pure JavaScript\n    var pathname = window.location.pathname;\n\n    // To show it in an alert window\n    alert(window.location);\n});\n\n\n$.getJSON(\"idcheck.php?callback=?\", { url:$(location).attr('href')}, function(json){\n    //alert(json.message);\n});\n</code></pre>\n"},{"score":10,"body":"<p>Use <strong>window.location.href</strong>. This will give you the complete <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\" rel=\"noreferrer\">URL</a>.</p>\n"},{"score":9,"body":"<p>See <a href=\"https://github.com/allmarkedup/purl/\" rel=\"noreferrer\">purl.js</a>. This will really help and can also be used, depending on jQuery. Use it like this:</p>\n\n<pre><code>$.url().param(\"yourparam\");\n</code></pre>\n"},{"score":41,"body":"<p>window.location is an object in javascript. it returns following data</p>\n\n<pre><code>window.location.host          #returns host\nwindow.location.hostname      #returns hostname\nwindow.location.path          #return path\nwindow.location.href          #returns full current url\nwindow.location.port          #returns the port\nwindow.location.protocol      #returns the protocol\n</code></pre>\n\n<p>in jquery you can use </p>\n\n<pre><code>$(location).attr('host');        #returns host\n$(location).attr('hostname');    #returns hostname\n$(location).attr('path');        #returns path\n$(location).attr('href');        #returns href\n$(location).attr('port');        #returns port\n$(location).attr('protocol');    #returns protocol\n</code></pre>\n"},{"score":4,"body":"<p>In jstl we can access current url path using <code>pageContext.request.contextPath</code>, If you want to do a ajax call,</p>\n\n<pre><code>  url = \"${pageContext.request.contextPath}\" + \"/controller/path\"\n</code></pre>\n\n<p>Ex: in the page <code>http://stackoverflow.com/questions/406192</code> this will give <code>http://stackoverflow.com/controller/path</code></p>\n"},{"score":5,"body":"<pre><code>// get current URL\n\n$(location).attr('href');\nvar pathname = window.location.pathname;\nalert(window.location);\n</code></pre>\n"},{"score":25,"body":"<p>java-script provides many methods to retrieve current URL which is displayed in browser's address bar.</p>\n\n<p>Test URL : </p>\n\n<pre class=\"lang-url prettyprint-override\"><code>http://\nstackoverflow.com/questions/5515310/get-current-url-with-jquery/32942762\n?\nrq=1&amp;page=2&amp;tab=active&amp;answertab=votes\n#\n32942762\n</code></pre>\n\n<pre class=\"lang-url prettyprint-override\"><code>resourceAddress.hash();\nconsole.log('URL Object ', webAddress);\nconsole.log('Parameters ', param_values);\n</code></pre>\n\n<p><strong>Function:</strong></p>\n\n<pre><code>var webAddress = {};\nvar param_values = {};\nvar protocol = '';\nvar resourceAddress = {\n\n    fullAddress : function () {\n        var addressBar = window.location.href;\n        if ( addressBar != '' &amp;&amp; addressBar != 'undefined') {\n            webAddress[ 'href' ] = addressBar;\n        }\n    },\n    protocol_identifier : function () { resourceAddress.fullAddress();\n\n        protocol = window.location.protocol.replace(':', '');\n        if ( protocol != '' &amp;&amp; protocol != 'undefined') {\n            webAddress[ 'protocol' ] = protocol;\n        }\n    },\n    domain : function () {      resourceAddress.protocol_identifier();\n\n        var domain = window.location.hostname;\n        if ( domain != '' &amp;&amp; domain != 'undefined' &amp;&amp; typeOfVar(domain) === 'string') {\n            webAddress[ 'domain' ] = domain;\n            var port = window.location.port;\n            if ( (port == '' || port == 'undefined') &amp;&amp; typeOfVar(port) === 'string') {\n                if(protocol == 'http') port = '80';\n                if(protocol == 'https') port = '443';           \n            }\n            webAddress[ 'port' ] = port;\n        }\n    },\n    pathname : function () {        resourceAddress.domain();\n\n        var resourcePath = window.location.pathname;\n        if ( resourcePath != '' &amp;&amp; resourcePath != 'undefined') {\n            webAddress[ 'resourcePath' ] = resourcePath;\n        }\n    },\n    params : function () {      resourceAddress.pathname();\n\n        var v_args = location.search.substring(1).split(\"&amp;\");\n\n        if ( v_args != '' &amp;&amp; v_args != 'undefined')\n        for (var i = 0; i &lt; v_args.length; i++) {\n            var pair = v_args[i].split(\"=\");\n\n            if ( typeOfVar( pair ) === 'array' ) {\n                param_values[ decodeURIComponent( pair[0] ) ] = decodeURIComponent( pair[1] );\n            }\n        }\n        webAddress[ 'params' ] = param_values;\n    },\n    hash : function () {        resourceAddress.params();\n\n        var fragment = window.location.hash.substring(1);\n        if ( fragment != '' &amp;&amp; fragment != 'undefined')\n            webAddress[ 'hash' ] = fragment;        \n    }\n};\nfunction typeOfVar (obj) {\n      return {}.toString.call(obj).split(' ')[1].slice(0, -1).toLowerCase();\n}\n</code></pre>\n\n<ul>\n<li>protocol « <a href=\"https://en.wikipedia.org/wiki/Web_browser\" rel=\"noreferrer\">Web-browsers</a> use Internet Protocol by following some rules for communication between WebHosted Applications and Web Client(Browser). (http = <a href=\"http://simpledns.com/plugin-httpredir\" rel=\"noreferrer\">80</a>, https (SSL) = <a href=\"https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers\" rel=\"noreferrer\">443</a>, ftp = 21, etc.) </li>\n</ul>\n\n<p>EX: With default port numbers</p>\n\n<pre><code>&lt;protocol&gt;//&lt;hostname&gt;:&lt;port&gt;/&lt;pathname&gt;&lt;search&gt;&lt;hash&gt;\nhttps://en.wikipedia.org:443/wiki/Pretty_Good_Privacy\nhttp://stackoverflow.com:80/\n</code></pre>\n\n<ul>\n<li>(//) « Host is the name given to an end-point(machine on which resource lives) on the Internet.\nwww.stackoverflow.com - <a href=\"https://en.wikipedia.org/wiki/Domain_name\" rel=\"noreferrer\">DNS</a> IP Address of an Application  (OR) localhost:8080 - localhost</li>\n</ul>\n\n<p>Domain names are which you register by the rules and procedures of the Domain Name System(DNS) tree. DNS servers of someone who manages your domain with IP-Address for addressing purposes. In DNS server hierarchy \nthe Root name of an stackoverlfow.com is com.</p>\n\n<pre><code>gTLDs      - com « stackoverflow (OR) in « co « google\n</code></pre>\n\n<p>Local system you have to maintain domain's which are not PUBLIC in Host Files.\n<code>localhost.yash.com « localhsot - subdomain(</code><a href=\"https://en.wikipedia.org/wiki/Apache_HTTP_Server\" rel=\"noreferrer\"><code>web-server</code></a><code>), yash.com - maindomain(</code><a href=\"https://en.wikipedia.org/wiki/Apache_HTTP_Server\" rel=\"noreferrer\"><code>Proxy-Server</code></a><code>).\nmyLocalApplication.com 172.89.23.777</code></p>\n\n<ul>\n<li>(/) « The path gives info about the specific resource within the host that the Web client wants to access </li>\n<li>(?) « An optional query is to pass a sequence of attribute–value pairs separated by a delimiter(&amp;).</li>\n<li>(#) « An optional fragment is often an id attribute of a specific element, and web browsers will scroll this element into view.</li>\n</ul>\n\n<p>If parameter has an <a href=\"http://www.esqsoft.com/javascript_examples/date-to-epoch.htm\" rel=\"noreferrer\">Epoch</a> <code>?date=1467708674</code> then use.</p>\n\n<pre><code>var epochDate = 1467708674; var date = new Date( epochDate );\n</code></pre>\n\n<p>URL <a href=\"https://i.stack.imgur.com/I79ER.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/I79ER.png\" alt=\"enter image description here\"></a></p>\n\n<hr>\n\n<p>Authentication url with username:password, If usernaem/password contains @ symbol\n<br />like:</p>\n\n<pre><code>Username = `my_email@gmail`\nPassword = `Yash@777`\n</code></pre>\n\n<p>then You need to URL encode the <strong><code>@</code></strong> as <strong><code>%40</code></strong>. <sup><a href=\"https://stackoverflow.com/a/10050890/5081877\">Refer...</a></sup></p>\n\n<pre><code>http://my_email%40gmail.com:Yash%40777@www.my_site.com\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\" rel=\"noreferrer\"><code>encodeURI()</code></a> (vs) <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\" rel=\"noreferrer\"><code>encodeURIComponent()</code></a> example</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var testURL = \"http:my_email@gmail:Yash777@//stackoverflow.com?tab=active&amp;page=1#32942762\";\n\nvar Uri = \"/:@?&amp;=,#\", UriComponent = \"$;+\", Unescaped = \"(-_.!~*')\"; // Fixed\nvar encodeURI_Str = encodeURI(Uri) +' '+ encodeURI( UriComponent ) +' '+ encodeURI(Unescaped);\nvar encodeURIComponent_Str =  encodeURIComponent( Uri ) +' '+ encodeURIComponent( UriComponent ) +' '+ encodeURIComponent( Unescaped );\nconsole.log(encodeURI_Str, '\\n', encodeURIComponent_Str);\n/*\n /:@?&amp;=,# +$; (-_.!~*') \n %2F%3A%40%3F%26%3D%2C%23 %2B%24%3B (-_.!~*')\n*/\n</code></pre>\n\n"},{"score":7,"body":"<pre><code>var newURL = window.location.protocol + \"//\" + window.location.host + \"/\" + window.location.pathname;\n</code></pre>\n"},{"score":13,"body":"<p>You can simply get your path using js itself, <code>window.location</code> or <code>location</code> will give you the object of current URL</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>console.log(\"Origin - \",location.origin);\r\nconsole.log(\"Entire URL - \",location.href);\r\nconsole.log(\"Path Beyond URL - \",location.pathname);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":8,"body":"<p>Very Commonly Used top 3 ones are</p>\n\n<pre><code>1. window.location.hostname \n2. window.location.href\n3. window.location.pathname\n</code></pre>\n"},{"score":9,"body":"<p>All browsers support Javascript window object. It defines the window of the browser.</p>\n\n<p>The global objects and functions become part of the window object automatically.</p>\n\n<p>All global variables are window objects properties and all global functions are its methods.</p>\n\n<p>The whole HTML document is a window property too.</p>\n\n<p>So you can use window.location object to get all url related attributes.</p>\n\n<p><strong>Javascript</strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>console.log(window.location.host);     //returns host\r\nconsole.log(window.location.hostname);    //returns hostname\r\nconsole.log(window.location.pathname);         //return path\r\nconsole.log(window.location.href);       //returns full current url\r\nconsole.log(window.location.port);         //returns the port\r\nconsole.log(window.location.protocol)     //returns the protocol</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p><strong>JQuery</strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>console.log(\"host = \"+$(location).attr('host'));\r\nconsole.log(\"hostname = \"+$(location).attr('hostname'));\r\nconsole.log(\"pathname = \"+$(location).attr('pathname')); \r\nconsole.log(\"href = \"+$(location).attr('href'));   \r\nconsole.log(\"port = \"+$(location).attr('port'));   \r\nconsole.log(\"protocol = \"+$(location).attr('protocol'));</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js\"&gt;&lt;/script&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":2,"body":"<p>By the following code you can get the current URL in  Jquery.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$(location).attr('hostname');                //origin URL\n$(location).attr('pathname');                // path name\n$(location).attr('hash');                    // everything comes after hash\n</code></pre>\n"},{"score":1,"body":"<p><strong>SHORTEST</strong> way (11 chars) in which you can do it is</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>let myUrl = ''+location\r\n\r\nconsole.log(myUrl);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}],"score":1897}