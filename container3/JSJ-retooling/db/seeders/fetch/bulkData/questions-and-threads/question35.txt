{"body":"<p>All I want is to get the website URL. Not the URL as taken from a link. On the page loading I need to be able to grab the full, current URL of the website and set it as a variable to do with as I please.</p>\n","title":"Get the current URL with JavaScript?","answers":[{"score":269,"body":"<p>Gets the current page URL:</p>\n\n<pre><code>window.location.href\n</code></pre>\n"},{"score":3842,"body":"<p>Use:</p>\n<pre><code>window.location.href\n</code></pre>\n<p>As noted in the comments, the line below works, but it is bugged for Firefox.</p>\n<pre><code>document.URL\n</code></pre>\n<p>See <strong><a href=\"https://web.archive.org/web/20170327080647/http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-46183437\" rel=\"noreferrer\">URL of type DOMString, readonly</a></strong>.</p>\n"},{"score":327,"body":"<p>Use <code>window.location</code> for read and write access to the <a href=\"https://developer.mozilla.org/En/DOM/Window.location#Location_object\" rel=\"noreferrer\">location object</a> associated with the current frame. If you just want to get the address as a read-only string, you may use <code>document.URL</code>, which should contain the same value as <code>window.location.href</code>.</p>\n"},{"score":11,"body":"<pre><code>var currentPageUrlIs = \"\";\nif (typeof this.href != \"undefined\") {\n       currentPageUrlIs = this.href.toString().toLowerCase(); \n}else{ \n       currentPageUrlIs = document.location.toString().toLowerCase();\n}\n</code></pre>\n\n<p>The above code can also help someone </p>\n"},{"score":713,"body":"<p><strong>URL Info Access</strong></p>\n\n<p>JavaScript provides you with many methods to retrieve and change the current URL, which is displayed in the browser's address bar. All these methods use the <code>Location</code> object, which is a property of the <code>Window</code> object. You can create a new <code>Location</code> object that has the current URL as follows:</p>\n\n<pre><code>var currentLocation = window.location;\n</code></pre>\n\n<p><strong>Basic URL Structure</strong></p>\n\n<pre><code>&lt;protocol&gt;//&lt;hostname&gt;:&lt;port&gt;/&lt;pathname&gt;&lt;search&gt;&lt;hash&gt;\n</code></pre>\n\n<ul>\n<li><p><strong>protocol:</strong> Specifies the protocol name be used to access the resource on the Internet. (HTTP (without SSL) or HTTPS (with SSL))</p></li>\n<li><p><strong>hostname:</strong> Host name specifies the host that owns the resource. For example, <code>www.stackoverflow.com</code>. A server provides services using the name of the host.</p></li>\n<li><p><strong>port:</strong> A port number used to recognize a specific process to which an Internet or other network message is to be forwarded when it arrives at a server.</p></li>\n<li><p><strong>pathname:</strong> The path gives info about the specific resource within the host that the Web client wants to access. For example, <code>/index.html</code>.</p></li>\n<li><p><strong>search:</strong> A query string follows the path component, and provides a string of information that the resource can utilize for some purpose (for example, as parameters for a search or as data to be processed). </p></li>\n<li><p><strong>hash:</strong> The anchor portion of a URL, includes the hash sign (#).</p></li>\n</ul>\n\n<p>With these <code>Location</code> object properties you can access all of these URL components and what they can set or return:</p>\n\n<ul>\n<li><strong>href</strong> - the entire URL</li>\n<li><strong>protocol</strong> - the protocol of the URL</li>\n<li><strong>host</strong> - the hostname and port of the URL</li>\n<li><strong>hostname</strong> - the hostname of the URL</li>\n<li><strong>port</strong> - the port number the server uses for the URL</li>\n<li><strong>pathname</strong> - the path name of the URL</li>\n<li><strong>search</strong> - the query portion of the URL</li>\n<li><strong>hash</strong> - the anchor portion of the URL</li>\n</ul>\n\n<p>I hope you got your answer..</p>\n"},{"score":30,"body":"<p>Use: <code>window.location.href</code>.</p>\n\n<p>As noted above, <code>document.URL</code> <strong>doesn't update</strong> when updating <code>window.location</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.URL\">MDN</a>.</p>\n"},{"score":8,"body":"<p>For complete URL with query strings:</p>\n\n<pre><code>document.location.toString().toLowerCase();\n</code></pre>\n\n<p>For host URL:</p>\n\n<pre><code>window.location\n</code></pre>\n"},{"score":22,"body":"<ul>\n<li>Use <code>window.location.href</code> to get the complete URL. </li>\n<li>Use <code>window.location.pathname</code> to get URL leaving the host.</li>\n</ul>\n"},{"score":42,"body":"<p><strong>To get the path, you can use:</strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>console.log('document.location', document.location.href);\r\nconsole.log('location.pathname',  window.location.pathname); // Returns path only\r\nconsole.log('location.href', window.location.href); // Returns full URL</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":5,"body":"<p>The way to get the current location object is <code>window.location</code>.</p>\n\n<p>Compare this to <code>document.location</code>, which originally only returned the current URL as a string. Probably to avoid confusion, <code>document.location</code> was replaced with <code>document.URL</code>.</p>\n\n<p>And, all modern browsers map <code>document.location</code> to <code>window.location</code>.</p>\n\n<p>In reality, for cross-browser safety, you should use <code>window.location</code> rather than <code>document.location</code>.</p>\n"},{"score":5,"body":"<p>In jstl we can access the current URL path using <code>pageContext.request.contextPath</code>. If you want to do an Ajax call, use the following URL.</p>\n\n<pre><code>url = \"${pageContext.request.contextPath}\" + \"/controller/path\"\n</code></pre>\n\n<p>Example: For the page <code>http://stackoverflow.com/posts/36577223</code> this will give <code>http://stackoverflow.com/controller/path</code>.</p>\n"},{"score":18,"body":"<p>You can <a href=\"https://stackoverflow.com/questions/1034621/get-current-url-in-web-browser\">get the current URL location with a hash tag</a> by using:</p>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code> // Using href\n var URL = window.location.href;\n\n // Using path\n var URL = window.location.pathname;\n</code></pre>\n\n<p><strong>jQuery</strong>:</p>\n\n<pre><code>$(location).attr('href');\n</code></pre>\n"},{"score":0,"body":"<p>You can get the full link of the current page through <code>location.href</code>\nand to get the link of the current controller, use:</p>\n\n<pre><code>location.href.substring(0, location.href.lastIndexOf('/'));\n</code></pre>\n"},{"score":1,"body":"<pre><code>location.origin+location.pathname+location.search+location.hash;\n</code></pre>\n<p>and</p>\n<pre><code>location.href\n</code></pre>\n<p>does the same.</p>\n"},{"score":39,"body":"<p>Open <strong>Developer Tools</strong>, type in the following in the <strong>console</strong> and press <strong>Enter</strong>.</p>\n\n<pre><code>window.location\n</code></pre>\n\n<p>Ex: Below is the screenshot of the result on the current page.</p>\n\n<p><a href=\"https://i.stack.imgur.com/EbfAs.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/EbfAs.png\" alt=\"enter image description here\"></a></p>\n\n<p>Grab what you need from here. :)</p>\n"},{"score":66,"body":"<p>OK, getting the <strong>full URL</strong> of the current page is easy using pure JavaScript. For example, try this code on this page:</p>\n\n<pre><code>window.location.href;\n// use it in the console of this page will return\n// http://stackoverflow.com/questions/1034621/get-current-url-in-web-browser\"\n</code></pre>\n\n<blockquote>\n  <p>The <code>window.location.href</code> property returns the URL of the current page.</p>\n</blockquote>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>document.getElementById(\"root\").innerHTML = \"The full URL of this page is:&lt;br&gt;\" + window.location.href;</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n\r\n&lt;body&gt;\r\n  &lt;h2&gt;JavaScript&lt;/h2&gt;\r\n  &lt;h3&gt;The window.location.href&lt;/h3&gt;\r\n  &lt;p id=\"root\"&gt;&lt;/p&gt;\r\n&lt;/body&gt;\r\n\r\n&lt;/html&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Just not bad to mention these as well:</p>\n\n<ul>\n<li><p>if you need a relative path, simply use <code>window.location.pathname</code>;</p></li>\n<li><p>if you'd like to get the host name, you can use <code>window.location.hostname</code>;</p></li>\n<li><p>and if you need to get the protocol separately, use <code>window.location.protocol</code></p>\n\n<ul>\n<li>also, if your page has <code>hash</code> tag, you can get it like: <code>window.location.hash</code>.</li>\n</ul></li>\n</ul>\n\n<p>So <code>window.location.href</code> handles all in once... basically:</p>\n\n<pre><code>window.location.protocol + '//' + window.location.hostname + window.location.pathname + window.location.hash === window.location.href;\n    //true\n</code></pre>\n\n<p>Also using <code>window</code> is not needed if already in window scope...</p>\n\n<p>So, in that case, you can use:</p>\n\n<pre><code>location.protocol\n\nlocation.hostname\n\nlocation.pathname\n\nlocation.hash\n\nlocation.href\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/NUGbD.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/NUGbD.png\" alt=\"Get the current URL with JavaScript\"></a></p>\n"},{"score":9,"body":"<p><strong>Adding result for quick reference</strong> </p>\n\n<blockquote>\n  <p>window.location;</p>\n</blockquote>\n\n<pre><code> Location {href: \"https://stackoverflow.com/questions/1034621/get-the-current-url-with-javascript\",\n ancestorOrigins: DOMStringList,\n origin: \"https://stackoverflow.com\",\n replace: ƒ, assign: ƒ, …}\n</code></pre>\n\n<blockquote>\n  <p>document.location</p>\n</blockquote>\n\n<pre><code>  Location {href: \"https://stackoverflow.com/questions/1034621/get-the-current-url-with-javascript\", \nancestorOrigins: DOMStringList,\n origin: \"https://stackoverflow.com\",\n replace: ƒ, assign: ƒ\n, …}\n</code></pre>\n\n<blockquote>\n  <p>window.location.pathname</p>\n</blockquote>\n\n<pre><code>\"/questions/1034621/get-the-current-url-with-javascript\"\n</code></pre>\n\n<blockquote>\n  <p>window.location.href</p>\n</blockquote>\n\n<pre><code>\"https://stackoverflow.com/questions/1034621/get-the-current-url-with-javascript\"\n</code></pre>\n\n<blockquote>\n  <p>location.hostname</p>\n</blockquote>\n\n<pre><code>\"stackoverflow.com\"\n</code></pre>\n"},{"score":0,"body":"<p><strong>Getting the current URL with JavaScript :</strong> </p>\n\n<blockquote>\n  <ul>\n  <li><p>window.location.toString();</p></li>\n  <li><p>window.location.href</p></li>\n  </ul>\n</blockquote>\n"},{"score":0,"body":"<p>if you are referring to a specific link that has an <strong>id</strong> this code can help you.</p>\n\n<pre><code>$(\".disapprove\").click(function(){\n    var id = $(this).attr(\"id\");\n\n    $.ajax({\n        url: \"&lt;?php echo base_url('index.php/sample/page/\"+id+\"')?&gt;\",\n        type: \"post\",\n        success:function()\n        {\n            alert(\"The Request has been Disapproved\");\n            window.location.replace(\"http://localhost/sample/page/\"+id+\"\");\n        }\n    });\n});\n</code></pre>\n\n<p>I am using ajax here to submit an id and redirect the page using <strong>window.location.replace</strong>. just add an attribute <code>id=\"\"</code> as stated.</p>\n"},{"score":-2,"body":"<p>Firstly check for page is loaded completely in </p>\n\n<pre><code>browser,window.location.toString();\n\nwindow.location.href\n</code></pre>\n\n<p>then call a function which takes url, URL variable and prints on console,</p>\n\n<pre><code>$(window).load(function(){\n   var url = window.location.href.toString();\n   var URL = document.URL;\n   var wayThreeUsingJQuery = $(location).attr('href');\n   console.log(url);\n   console.log(URL);\n   console.log(wayThreeUsingJQuery );\n});\n</code></pre>\n"},{"score":6,"body":"<p>For those who want an actual URL object, potentially for a utility which takes URLs as an argument:</p>\n\n<pre><code>const url = new URL(window.location.href)\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL\" rel=\"noreferrer\">https://developer.mozilla.org/en-US/docs/Web/API/URL</a></p>\n"},{"score":6,"body":"<p>Nikhil Agrawal's answer is great, just adding a little example here you can do in the console to see the different components in action:</p>\n\n<p><a href=\"https://i.stack.imgur.com/ls587.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/ls587.png\" alt=\"enter image description here\"></a></p>\n\n<p>If you want the base URL without path or query parameter (for example to do AJAX requests against to work on both development/staging AND production servers), <code>window.location.origin</code> is best as it keeps the protocol as well as optional port (in Django development, you sometimes have a non-standard port which breaks it if you just use hostname etc.)</p>\n"},{"score":0,"body":"<p>Try</p>\n\n<pre><code>location+''\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>let url = location+'';\r\n\r\nconsole.log(url);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}],"score":3145}