{"body":"<pre><code>$input.disabled = true;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>$input.disabled = \"disabled\";\n</code></pre>\n\n<p>Which is the standard way? And, conversely, how do you enable a disabled input?</p>\n","title":"Disable/enable an input with jQuery?","answers":[{"score":3876,"body":"<h2>jQuery 1.6+</h2>\n\n<p>To change the <code>disabled</code> property you should use the <a href=\"http://api.jquery.com/prop\" rel=\"noreferrer\"><code>.prop()</code></a> function.</p>\n\n<pre><code>$(\"input\").prop('disabled', true);\n$(\"input\").prop('disabled', false);\n</code></pre>\n\n<h2>jQuery 1.5 and below</h2>\n\n<p>The <code>.prop()</code> function doesn't exist, but <a href=\"http://api.jquery.com/attr\" rel=\"noreferrer\"><code>.attr()</code></a> does similar:</p>\n\n<p>Set the disabled attribute.</p>\n\n<pre><code>$(\"input\").attr('disabled','disabled');\n</code></pre>\n\n<p>To enable again, the proper method is to use <a href=\"//api.jquery.com/removeAttr\" rel=\"noreferrer\"><code>.removeAttr()</code></a></p>\n\n<pre><code>$(\"input\").removeAttr('disabled');\n</code></pre>\n\n<h2>In any version of jQuery</h2>\n\n<p>You can always rely on the actual DOM object and is probably a little faster than the other two options if you are only dealing with one element:</p>\n\n<pre><code>// assuming an event handler thus 'this'\nthis.disabled = true;\n</code></pre>\n\n<p>The advantage to using the <code>.prop()</code> or <code>.attr()</code> methods is that you can set the property for a bunch of selected items.</p>\n\n<hr>\n\n<p><strong>Note:</strong> In 1.6 there is a <a href=\"//api.jquery.com/removeProp\" rel=\"noreferrer\"><code>.removeProp()</code></a> method that sounds a lot like <code>removeAttr()</code>, but it <strong>SHOULD NOT BE USED</strong> on native properties like <code>'disabled'</code>  Excerpt from the documentation:</p>\n\n<blockquote>\n  <p>Note: Do not use this method to remove native properties such as checked, disabled, or selected. This will remove the property completely and, once removed, cannot be added again to element. Use .prop() to set these properties to false instead.</p>\n</blockquote>\n\n<p>In fact, I doubt there are many legitimate uses for this method, boolean props are done in such a way that you should set them to false instead of \"removing\" them like their \"attribute\" counterparts in 1.5</p>\n"},{"score":62,"body":"<p>Just for the sake of new conventions &amp;&amp; making it adaptable going forward (unless things change drastically with ECMA6(????):</p>\n\n<pre><code>$(document).on('event_name', '#your_id', function() {\n    $(this).removeAttr('disabled');\n});\n</code></pre>\n\n<p>and</p>\n\n<pre><code>$(document).off('event_name', '#your_id', function() {\n    $(this).attr('disabled','disabled');   \n});\n</code></pre>\n"},{"score":34,"body":"<pre><code>    // Disable #x\n    $( \"#x\" ).prop( \"disabled\", true );\n    // Enable #x\n    $( \"#x\" ).prop( \"disabled\", false );\n</code></pre>\n\n<p>Sometimes you need to disable/enable the form element like input or textarea. Jquery helps you to easily make this with setting disabled attribute to \"disabled\".\nFor e.g.:</p>\n\n<pre><code>  //To disable \n  $('.someElement').attr('disabled', 'disabled');\n</code></pre>\n\n<p>To enable disabled element you need to remove \"disabled\" attribute from this element or empty it's string. For e.g:</p>\n\n<pre><code>//To enable \n$('.someElement').removeAttr('disabled');\n\n// OR you can set attr to \"\" \n$('.someElement').attr('disabled', '');\n</code></pre>\n\n<p>refer :<a href=\"http://garmoncheg.blogspot.fr/2011/07/how-to-disableenable-element-with.html\">http://garmoncheg.blogspot.fr/2011/07/how-to-disableenable-element-with.html</a></p>\n"},{"score":14,"body":"<pre><code>$(\"input\")[0].disabled = true;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(\"input\")[0].disabled = false;\n</code></pre>\n"},{"score":7,"body":"<p>If you just want to invert the current state (like a toggle button behaviour):</p>\n\n<pre><code>$(\"input\").prop('disabled', ! $(\"input\").prop('disabled') );\n</code></pre>\n"},{"score":8,"body":"<p>You can put this somewhere global in your code:</p>\n\n<pre><code>$.prototype.enable = function () {\n    $.each(this, function (index, el) {\n        $(el).removeAttr('disabled');\n    });\n}\n\n$.prototype.disable = function () {\n    $.each(this, function (index, el) {\n        $(el).attr('disabled', 'disabled');\n    });\n}\n</code></pre>\n\n<p>And then you can write stuff like:</p>\n\n<pre><code>$(\".myInputs\").enable();\n$(\"#otherInput\").disable();\n</code></pre>\n"},{"score":-1,"body":"<pre><code>&lt;html&gt;\n&lt;body&gt;\n\nName: &lt;input type=\"text\" id=\"myText\"&gt;\n\n\n\n&lt;button onclick=\"disable()\"&gt;Disable Text field&lt;/button&gt;\n&lt;button onclick=\"enable()\"&gt;Enable Text field&lt;/button&gt;\n\n&lt;script&gt;\nfunction disable() {\n    document.getElementById(\"myText\").disabled = true;\n}\nfunction enable() {\n    document.getElementById(\"myText\").disabled = false;\n}\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n"},{"score":-1,"body":"<p>In jQuery Mobile:</p>\n\n<h3>For disable</h3>\n\n<pre><code>$('#someselectElement').selectmenu().selectmenu('disable').selectmenu('refresh', true);\n$('#someTextElement').textinput().textinput('disable');\n</code></pre>\n\n<h3>For enable</h3>\n\n<pre><code>$('#someselectElement').selectmenu().selectmenu('enable').selectmenu('refresh', true);\n$('#someTextElement').textinput('enable');\n</code></pre>\n"},{"score":0,"body":"<p>I used @gnarf answer and added it as function</p>\n\n<pre><code>   $.fn.disabled = function (isDisabled) {\n     if (isDisabled) {\n       this.attr('disabled', 'disabled');\n     } else {\n       this.removeAttr('disabled');\n     }\n   };\n</code></pre>\n\n<p>Then use like this</p>\n\n<pre><code>$('#myElement').disable(true);\n</code></pre>\n"},{"score":1,"body":"<p><strong>Disable true for input type :</strong></p>\n\n<blockquote>\n  <p>In case of a specific input type (<em>Ex. Text type input</em>)</p>\n</blockquote>\n\n<pre><code>$(\"input[type=text]\").attr('disabled', true);\n</code></pre>\n\n<blockquote>\n  <p>For all type of input type</p>\n</blockquote>\n\n<pre><code>$(\"input\").attr('disabled', true);\n</code></pre>\n"},{"score":2,"body":"<p>Update for 2018:</p>\n\n<p>Now there's no need for jQuery and it's been a while since <code>document.querySelector</code>  or <code>document.querySelectorAll</code> (for multiple elements) do almost exactly same job as $, plus more explicit ones <code>getElementById</code>, <code>getElementsByClassName</code>, <code>getElementsByTagName</code></p>\n\n<p>Disabling one field of \"input-checkbox\" class</p>\n\n<pre><code>document.querySelector('.input-checkbox').disabled = true;\n</code></pre>\n\n<p>or multiple elements</p>\n\n<pre><code>document.querySelectorAll('.input-checkbox').forEach(el =&gt; el.disabled = true);\n</code></pre>\n"},{"score":0,"body":"<h2>2018, without JQuery (ES6)</h2>\n\n<p>Disable all <code>input</code>:</p>\n\n<pre><code>[...document.querySelectorAll('input')].map(e =&gt; e.disabled = true);\n</code></pre>\n\n<p>Disable <code>input</code> with <code>id=\"my-input\"</code></p>\n\n<pre><code>document.getElementById('my-input').disabled = true;\n</code></pre>\n\n<p><em>The question is <strong>with</strong> JQuery, it's just FYI.</em></p>\n"},{"score":2,"body":"<p>You can use the jQuery prop() method to disable or enable form element or control dynamically using jQuery. The prop() method require jQuery 1.6 and above.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n        $(document).ready(function(){\n            $('form input[type=\"submit\"]').prop(\"disabled\", true);\n            $(\".agree\").click(function(){\n                if($(this).prop(\"checked\") == true){\n                    $('form input[type=\"submit\"]').prop(\"disabled\", false);\n                }\n                else if($(this).prop(\"checked\") == false){\n                    $('form input[type=\"submit\"]').prop(\"disabled\", true);\n                }\n            });\n        });\n    &lt;/script&gt;\n</code></pre>\n"},{"score":5,"body":"<p>There are many ways using them you can enable/disable any element <strong>:</strong></p>\n\n<p><strong>Approach 1</strong></p>\n\n<pre><code>$(\"#txtName\").attr(\"disabled\", true);\n</code></pre>\n\n<p><strong>Approach 2</strong></p>\n\n<pre><code>$(\"#txtName\").attr(\"disabled\", \"disabled\");\n</code></pre>\n\n<p>If you are using jQuery 1.7 or higher version then use prop(), instead of attr().</p>\n\n<pre><code>$(\"#txtName\").prop(\"disabled\", \"disabled\");\n</code></pre>\n\n<p>If you wish to enable any element then you just have to do opposite of what you did to make it disable. However jQuery provides another way to remove any attribute. </p>\n\n<p><strong>Approach 1</strong></p>\n\n<pre><code>$(\"#txtName\").attr(\"disabled\", false);\n</code></pre>\n\n<p><strong>Approach 2</strong></p>\n\n<pre><code>$(\"#txtName\").attr(\"disabled\", \"\");\n</code></pre>\n\n<p><strong>Approach 3</strong></p>\n\n<pre><code>$(\"#txtName\").removeAttr(\"disabled\");\n</code></pre>\n\n<p>Again, if you are using jQuery 1.7 or higher version then use prop(), instead of attr(). That's is. This is how you enable or disable any element using jQuery.</p>\n"},{"score":1,"body":"<p>Disable:</p>\n\n<pre><code>$('input').attr('readonly', true); // Disable it.\n$('input').addClass('text-muted'); // Gray it out with bootstrap.\n</code></pre>\n\n<p>Enable:</p>\n\n<pre><code>$('input').attr('readonly', false); // Enable it.\n$('input').removeClass('text-muted'); // Back to normal color with bootstrap.\n</code></pre>\n"},{"score":1,"body":"<p>Use like this,    </p>\n\n<pre><code> $( \"#id\" ).prop( \"disabled\", true );\n\n $( \"#id\" ).prop( \"disabled\", false );\n</code></pre>\n"},{"score":1,"body":"<p>this works for me </p>\n\n<pre><code>$(\"#values:input\").attr(\"disabled\",true);\n$(\"#values:input\").attr(\"disabled\",false);\n</code></pre>\n"},{"score":0,"body":"<p><strong>Approach 4</strong> (this is extension of <a href=\"https://stackoverflow.com/a/51651968/860099\">wild coder answer</a>)</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>txtName.disabled=1     // 0 for enable</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;input id=\"txtName\"&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}],"score":2344}