{"body":"<p>How can I refresh a page with jQuery?</p>\n","title":"How can I refresh a page with jQuery?","answers":[{"score":460,"body":"<p>This should work on all browsers even without jQuery:</p>\n\n<pre><code>location.reload();\n</code></pre>\n"},{"score":3904,"body":"<p>Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location/reload\" rel=\"noreferrer\"><code>location.reload()</code></a>:</p>\n\n<pre><code>$('#something').click(function() {\n    location.reload();\n});\n</code></pre>\n\n<p>The <code>reload()</code> function takes an optional parameter that can be set to <code>true</code> to force a reload from the server rather than the cache. The parameter defaults to <code>false</code>, so by default the page may reload from the browser's cache.</p>\n"},{"score":203,"body":"<p>Lots of ways will work, I suppose:</p>\n\n<ul>\n<li><code>window.location.reload();</code></li>\n<li><code>history.go(0);</code></li>\n<li><code>window.location.href=window.location.href;</code></li>\n</ul>\n"},{"score":64,"body":"<p>The question should be,</p>\n\n<p><strong>How to refresh a page with <em><a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a></em></strong></p>\n\n<pre><code>window.location.href = window.location.href; //This is a possibility\nwindow.location.reload(); //Another possiblity\nhistory.go(0); //And another\n</code></pre>\n\n<p>You're spoiled for choice.</p>\n"},{"score":123,"body":"<p>To reload a page with jQuery, do:</p>\n\n<pre><code>$.ajax({\n    url: \"\",\n    context: document.body,\n    success: function(s,x){\n        $(this).html(s);\n    }\n});\n</code></pre>\n\n<p>The approach here that I used was Ajax jQuery. I tested it on <a href=\"http://en.wikipedia.org/wiki/Google_Chrome\">Chrome</a> 13. Then I put the code in the handler that will trigger the reload. The <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\">URL</a> is <code>\"\"</code>, which means <strong><em>this page</em></strong>.</p>\n"},{"score":107,"body":"<p>If the current page was loaded by a POST request, you may want to use</p>\n\n<pre><code>window.location = window.location.pathname;\n</code></pre>\n\n<p>instead of</p>\n\n<pre><code>window.location.reload();\n</code></pre>\n\n<p>because <code>window.location.reload()</code> will prompt for confirmation if called on a page that was loaded by a POST request.</p>\n"},{"score":460,"body":"<p>There are <strike>multiple</strike> unlimited ways to refresh a page with JavaScript:</p>\n\n<ol>\n<li><code>location.reload()</code></li>\n<li><code>history.go(0)</code></li>\n<li><code>location.href = location.href</code></li>\n<li><code>location.href = location.pathname</code></li>\n<li><code>location.replace(location.pathname)</code></li>\n<li><p><code>location.reload(false)</code> </p>\n\n<blockquote>\n  <p>If we needed to pull the document from\n   the web-server again (such as where the document contents\n   change dynamically) we would pass the argument as <code>true</code>.</p>\n</blockquote></li>\n</ol>\n\n<p>You can continue the list being creative:</p>\n\n<ul>\n<li><code>window.location = window.location</code></li>\n<li><code>window.self.window.self.window.window.location = window.location</code></li>\n<li><a href=\"http://www.phpied.com/files/location-location/location-location.html\" rel=\"noreferrer\">...and other 534 ways</a></li>\n</ul>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"false\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var methods = [\r\n  \"location.reload()\",\r\n  \"history.go(0)\",\r\n  \"location.href = location.href\",\r\n  \"location.href = location.pathname\",\r\n  \"location.replace(location.pathname)\",\r\n  \"location.reload(false)\"\r\n];\r\n\r\nvar $body = $(\"body\");\r\nfor (var i = 0; i &lt; methods.length; ++i) {\r\n  (function(cMethod) {\r\n    $body.append($(\"&lt;button&gt;\", {\r\n      text: cMethod\r\n    }).on(\"click\", function() {\r\n      eval(cMethod); // don't blame me for using eval\r\n    }));\r\n  })(methods[i]);\r\n}</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>button {\r\n  background: #2ecc71;\r\n  border: 0;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-family: \"Monaco\", monospace;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.5s ease;\r\n  margin: 2px;\r\n}\r\nbutton:hover {\r\n  background: #27ae60;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":17,"body":"<p>The jQuery <code>Load</code> function can also perform a page refresh:</p>\n\n<pre><code>$('body').load('views/file.html', function () {\n    $(this).fadeIn(5000);\n});\n</code></pre>\n"},{"score":55,"body":"<p>You may want to use</p>\n\n<pre><code>location.reload(forceGet)\n</code></pre>\n\n<p><code>forceGet</code> is a boolean and optional.</p>\n\n<p>The default is false which reloads the page from the cache.</p>\n\n<p>Set this parameter to true if you want to force the browser to get the page from the server to get rid of the cache as well.</p>\n\n<p>Or just</p>\n\n<pre><code>location.reload()\n</code></pre>\n\n<p>if you want quick and easy with caching.</p>\n"},{"score":26,"body":"<p><code>window.location.reload()</code> will reload from the server and will load all your data, scripts, images, etc. again.</p>\n\n<p>So if you just want to refresh the HTML, the <code>window.location = document.URL</code> will return much quicker and with less traffic. But it will not reload the page if there is a hash (#) in the URL.</p>\n"},{"score":16,"body":"<p>As the question is generic, let's try to sum up possible solutions for the answer:</p>\n\n<p><strong>Simple plain JavaScript Solution</strong>:</p>\n\n<p>The easiest way is a one line solution placed in an appropriate way:</p>\n\n<pre><code>location.reload();\n</code></pre>\n\n<p>What many people are missing here, because they hope to get some \"points\" is that the reload() function itself offers a Boolean as a parameter (details: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location/reload\">https://developer.mozilla.org/en-US/docs/Web/API/Location/reload</a>).</p>\n\n<blockquote>\n  <p>The Location.reload() method reloads the resource from the current\n  URL. Its optional unique parameter is a Boolean, which, when it is\n  true, causes the page to always be reloaded from the server. If it is\n  false or not specified, the browser may reload the page from its\n  cache.</p>\n</blockquote>\n\n<p>This means there are two ways:</p>\n\n<p>Solution1: <strong>Force reloading the current page from the server</strong></p>\n\n<pre><code>location.reload(true);\n</code></pre>\n\n<p>Solution2: <strong>Reloading from cache or server (based on browser and your config)</strong></p>\n\n<pre><code>location.reload(false);\nlocation.reload();\n</code></pre>\n\n<p>And if you want to combine it with jQuery an listening to an event, I would recommend using the \".on()\" method instead of \".click\" or other event wrappers, e.g. a more proper solution would be:</p>\n\n<pre><code>$('#reloadIt').on('eventXyZ', function() {\n    location.reload(true);\n});\n</code></pre>\n"},{"score":41,"body":"<p>Three approaches with different cache-related behaviours:</p>\n\n<ul>\n<li><h3><strong><em><code>location.reload(true)</code></em></strong></h3>\n\n<p>In browsers that implement the <code>forcedReload</code> parameter of <code>location.reload()</code>, reloads by fetching a fresh copy of the page and all of its resources (scripts, stylesheets, images, etc.). Will not serve <em>any</em> resources from the cache - gets fresh copies from the server without sending any <code>if-modified-since</code> or <code>if-none-match</code> headers in the request.</p>\n\n<p>Equivalent to the user doing a \"hard reload\" in browsers where that's possible.</p>\n\n<p>Note that passing <code>true</code> to <code>location.reload()</code> is supported in Firefox (see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location/reload\" rel=\"nofollow noreferrer\">MDN</a>) and Internet Explorer (see <a href=\"https://msdn.microsoft.com/en-us/library/ms536691(v=vs.85).aspx\" rel=\"nofollow noreferrer\">MSDN</a>) but is not supported universally and is not part of <a href=\"http://www.w3.org/TR/html5/browsers.html#location\" rel=\"nofollow noreferrer\">the W3 HTML 5 spec</a>, nor <a href=\"http://www.w3.org/TR/html51/browsers.html#the-location-interface\" rel=\"nofollow noreferrer\">the W3 draft HTML 5.1 spec</a>, nor <a href=\"https://html.spec.whatwg.org/multipage/browsers.html#the-location-interface\" rel=\"nofollow noreferrer\">the WHATWG HTML Living Standard</a>.</p>\n\n<p>In unsupporting browsers, like Google Chrome, <code>location.reload(true)</code> behaves the same as <code>location.reload()</code>.</p></li>\n<li><h3><strong><em><code>location.reload()</code></em></strong> or <strong><em><code>location.reload(false)</code></em></strong></h3>\n\n<p>Reloads the page, fetching a fresh, non-cached copy of the page HTML itself, and performing <a href=\"https://tools.ietf.org/html/rfc7234\" rel=\"nofollow noreferrer\">RFC 7234</a> revalidation requests for any resources (like scripts) that the browser has cached, <em>even if they are <a href=\"https://tools.ietf.org/html/rfc7234#section-4.2\" rel=\"nofollow noreferrer\">fresh</a></em> are RFC 7234 permits the browser to serve them without revalidation.</p>\n\n<p>Exactly how the browser should utilise its cache when performing a <code>location.reload()</code> call isn't specified or documented as far as I can tell; I determined the behaviour above by experimentation.</p>\n\n<p>This is equivalent to the user simply pressing the \"refresh\" button in their browser.</p></li>\n<li><h3><strong><em><code>location = location</code></em></strong> (or infinitely many other possible techniques that involve assigning to <code>location</code> or to its properties)</h3>\n\n<p>Only works if the page's URL doesn't contain a fragid/hashbang!</p>\n\n<p>Reloads the page without refetching or revalidating <em>any</em> <a href=\"https://tools.ietf.org/html/rfc7234#section-4.2\" rel=\"nofollow noreferrer\">fresh</a> resources from the cache. If the page's HTML itself is fresh, this will reload the page without performing any HTTP requests at all.</p>\n\n<p>This is equivalent (from a caching perspective) to the user opening the page in a new tab.</p>\n\n<p>However, if the page's URL contains a hash, this will have no effect.</p>\n\n<p>Again, the caching behaviour here is unspecified as far as I know; I determined it by testing.</p></li>\n</ul>\n\n<p>So, in summary, you want to use:</p>\n\n<ul>\n<li><code>location = location</code> for maximum use of the cache, <em>as long as</em> the page doesn't have a hash in its URL, in which case this won't work</li>\n<li><code>location.reload(true)</code> to fetch new copies of all resources without revalidating (although it's not universally supported and will behave no differently to <code>location.reload()</code> in some browsers, like Chrome)</li>\n<li><code>location.reload()</code> to faithfully reproduce the effect of the user clicking the 'refresh' button.</li>\n</ul>\n"},{"score":15,"body":"<p>Here is a solution that asynchronously reloads a page using jQuery. It avoids the flicker caused by <code>window.location = window.location</code>. This example shows a page that reloads continuously, as in a dashboard. It is battle-tested and is running on an information display TV in Times Square.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    ...\n    &lt;meta http-equiv=\"refresh\" content=\"300\"&gt;\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.2.3/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n    function refresh() {\n      $.ajax({\n        url: \"\",\n        dataType: \"text\",\n        success: function(html) {\n          $('#fu').replaceWith($.parseHTML(html));\n          setTimeout(refresh,2000);\n        }\n      });\n    }\n    refresh();\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"fu\"&gt;\n      ...\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Notes:</p>\n\n<ul>\n<li>Using <code>$.ajax</code> directly like <code>$.get('',function(data){$(document.body).html(data)})</code> <a href=\"https://stackoverflow.com/questions/21761931/google-hosted-libraries-is-unnecessarily-using-cache-breakers\">causes css/js files to get cache-busted</a>, even if you use <code>cache: true</code>, that's why we use <code>parseHTML</code></li>\n<li><a href=\"https://stackoverflow.com/questions/14423257/find-body-tag-in-an-ajax-html-response\"><code>parseHTML</code> will NOT find a <code>body</code> tag</a> so your whole body needs to go in an extra div, I hope this nugget of knowledge helps you one day, you can guess how we chose the id for that <code>div</code></li>\n<li>Use <code>http-equiv=\"refresh\"</code> just in case something goes wrong with javascript/server hiccup, then the page will STILL reload without you getting a phone call</li>\n<li>This approach probably leaks memory somehow, the <code>http-equiv</code> refresh fixes that</li>\n</ul>\n"},{"score":14,"body":"<p>I found</p>\n\n<pre><code>window.location.href = \"\";\n</code></pre>\n\n<p>or</p>\n\n<pre><code>window.location.href = null;\n</code></pre>\n\n<p>also makes a page refresh.</p>\n\n<p>This makes it very much easier to reload the page removing any hash.\nThis is very nice when I am using AngularJS in the iOS simulator, so that I don't have to rerun the app.</p>\n"},{"score":9,"body":"<p>You can use  <strong>JavaScript</strong>  <code>location.reload()</code>  method.\nThis method accepts a boolean parameter. <code>true</code> or <code>false</code>. If the parameter is  <code>true</code>; the page always reloaded from the server. If it is <code>false</code>; which  is  the default or with empty parameter browser reload the page from it's cache.</p>\n\n<p>With <code>true</code> parameter</p>\n\n<pre><code>&lt;button type=\"button\" onclick=\"location.reload(true);\"&gt;Reload page&lt;/button&gt;\n</code></pre>\n\n<p>With <code>default</code>/ <code>false</code> parameter</p>\n\n<pre><code> &lt;button type=\"button\" onclick=\"location.reload();\"&gt;Reload page&lt;/button&gt;\n</code></pre>\n\n<p>Using jquery</p>\n\n<pre><code>&lt;button id=\"Reloadpage\"&gt;Reload page&lt;/button&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $('#Reloadpage').click(function() {\n        location.reload();\n    }); \n&lt;/script&gt;\n</code></pre>\n"},{"score":3,"body":"<p>Use <code>onclick=\"return location.reload();\"</code> within the button tag.</p>\n\n<pre><code>&lt;button id=\"refersh-page\" name=\"refersh-page\" type=\"button\" onclick=\"return location.reload();\"&gt;Refesh Page&lt;/button&gt;\n</code></pre>\n"},{"score":8,"body":"<p>You <strong>don't need</strong> anything from jQuery, to reload a page using <strong>pure JavaScript</strong>, just use reload function on location property like this:</p>\n\n<pre><code>window.location.reload();\n</code></pre>\n\n<p>By default, this will reload the page using the browser cache (if exists)...</p>\n\n<p>If you'd like to do force reload the page, just pass a <strong>true</strong> value to reload method like below...</p>\n\n<pre><code>window.location.reload(true);\n</code></pre>\n\n<p>Also if you are already in <strong>window scope</strong>, you can get rid of window and do:</p>\n\n<pre><code>location.reload();\n</code></pre>\n"},{"score":1,"body":"<p><strong>Simple Javascript Solution:</strong></p>\n\n<pre><code> location = location; \n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;button onClick=\"location = location;\"&gt;Reload&lt;/button&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"score":3,"body":"<p>If you are using jQuery and want to refresh, then try adding your jQuery in a javascript function:</p>\n\n<p>I wanted to hide an iframe from a page when clicking oh an <code>h3</code>, for me it worked but I wasn't able to click the item that allowed me to view the <code>iframe</code> to begin with unless I refreshed the browser manually...not ideal.</p>\n\n<p>I tried the following:</p>\n\n<pre><code>var hide = () =&gt; {\n    $(\"#frame\").hide();//jQuery\n    location.reload(true);//javascript\n};\n</code></pre>\n\n<p>Mixing plain Jane javascript with your jQuery should work.</p>\n\n<pre><code>// code where hide (where location.reload was used)function was integrated, below    \n    iFrameInsert = () =&gt; {\n        var file = `Fe1FVoW0Nt4`;\n        $(\"#frame\").html(`&lt;iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/${file}\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen&gt;&lt;/iframe&gt;&lt;h3&gt;Close Player&lt;/h3&gt;`);\n        $(\"h3\").enter code hereclick(hide);\n}\n\n// View Player \n$(\"#id-to-be-clicked\").click(iFrameInsert);\n</code></pre>\n"},{"score":-1,"body":"<p>Here are some lines of code you can use to reload the page <strong>using jQuery</strong>.</p>\n\n<p>It uses the jQuery wrapper and extracts the native dom element. </p>\n\n<p>Use this if you just want a <strong>jQuery feeling</strong> on your code and you don't care about <strong>speed/performance</strong> of the code.</p>\n\n<p>Just pick from 1 to 10 that suits your needs or add some more based on the pattern and answers before this.</p>\n\n<pre><code>&lt;script&gt;\n  $(location)[0].reload(); //1\n  $(location).get(0).reload(); //2\n  $(window)[0].location.reload(); //3\n  $(window).get(0).location.reload(); //4\n  $(window)[0].$(location)[0].reload(); //5\n  $(window).get(0).$(location)[0].reload(); //6\n  $(window)[0].$(location).get(0).reload(); //7\n  $(window).get(0).$(location).get(0).reload(); //8\n  $(location)[0].href = ''; //9\n  $(location).get(0).href = ''; //10\n  //... and many other more just follow the pattern.\n&lt;/script&gt;\n</code></pre>\n"},{"score":3,"body":"<p>All the answers here are good. Since the question specifies about reloading the page with <strong><a href=\"/questions/tagged/jquery\" class=\"post-tag\" title=\"show questions tagged &#39;jquery&#39;\" rel=\"tag\">jquery</a></strong>, I just thought adding something more for future readers.</p>\n<blockquote>\n<p><strong><a href=\"https://jquery.com/\" rel=\"nofollow noreferrer\">jQuery</a></strong> is a cross-platform <strong>JavaScript library</strong> designed to simplify the client-side scripting of HTML.</p>\n<p><sup>~ <a href=\"https://en.wikipedia.org/wiki/JQuery\" rel=\"nofollow noreferrer\">Wikipedia</a> ~</sup></p>\n</blockquote>\n<p>So you'll understand that the foundation of <a href=\"/questions/tagged/jquery\" class=\"post-tag\" title=\"show questions tagged &#39;jquery&#39;\" rel=\"tag\">jquery</a>, or <a href=\"/questions/tagged/jquery\" class=\"post-tag\" title=\"show questions tagged &#39;jquery&#39;\" rel=\"tag\">jquery</a> is based on <a href=\"/questions/tagged/javascript\" class=\"post-tag\" title=\"show questions tagged &#39;javascript&#39;\" rel=\"tag\">javascript</a>. So going with pure <a href=\"/questions/tagged/javascript\" class=\"post-tag\" title=\"show questions tagged &#39;javascript&#39;\" rel=\"tag\">javascript</a> is way better when it comes to simple things.</p>\n<p>But if you need a <a href=\"/questions/tagged/jquery\" class=\"post-tag\" title=\"show questions tagged &#39;jquery&#39;\" rel=\"tag\">jquery</a> solution, here's one.</p>\n<pre><code>$(location).attr('href', '');\n</code></pre>\n"},{"score":0,"body":"<p>It is shortest in JavaScript.</p>\n\n<pre><code>window.location = '';\n</code></pre>\n"},{"score":8,"body":"<p>use </p>\n\n<pre><code>location.reload();\n</code></pre>\n\n<p>or</p>\n\n<pre><code>window.location.reload();\n</code></pre>\n"},{"score":3,"body":"<p>There are many ways to reload the current pages, but somehow using those approaches you can see page updated but not with few cache values will be there, so overcome that issue or if you wish to make hard requests then use the below code.</p>\n\n<pre><code>    location.reload(true);\n    //Here, it will make a hard request or reload the current page and clear the cache as well.\n\n\n    location.reload(false); OR location.reload();\n    //It can be reload the page with cache\n</code></pre>\n"},{"score":1,"body":"<p>Probably shortest (12 chars) - use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History\" rel=\"nofollow noreferrer\">history</a></p>\n\n<pre><code>history.go()\n</code></pre>\n"},{"score":1,"body":"<p>You can write it in two ways. 1st is the standard way of reloading the page also called as <strong>simple refresh</strong>  </p>\n\n<pre><code>location.reload(); //simple refresh\n</code></pre>\n\n<p>And another is called the <strong>hard refresh</strong>. Here you pass the boolean expression and set it to true. This will reload the page destroying the older cache and displaying the contents from scratch.</p>\n\n<pre><code>location.reload(true);//hard refresh\n</code></pre>\n"},{"score":2,"body":"<pre><code>&lt;i id=\"refresh\" class=\"fa fa-refresh\" aria-hidden=\"true\"&gt;&lt;/i&gt;\n\n&lt;script&gt;\n$(document).on('click','#refresh',function(){\n   location.reload(true);\n});\n&lt;/script&gt;\n</code></pre>\n"},{"score":0,"body":"<pre><code>$(document).on(\"click\", \"#refresh_btn\", function(event) \n{\n     window.location.replace(window.location.href);\n});\n</code></pre>\n"}],"score":2516}